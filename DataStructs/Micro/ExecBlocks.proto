#ifndef EXECBLOCKS_PROTO
#define EXECBLOCKS_PROTO

namespace ExecBlocks{
	using namespace Node;
	
	#define SUPER DLN<InstructionType>
	#define SUPERCONST SUPER::DLN
	#define SUPERDEST SUPER::~DLN
	class Instruction:public SUPER{
		public:
		virtual void dummy()=0;
		
		virtual void appendSucc(Instruction* toappend){
			SUPER::appendSucc(toappend);
			return;
		}
		
		virtual Instruction* spliceSucc(){
			return (Instruction*)(SUPER::spliceSucc());
		}
		
		Instruction(Instruction* prev,Instruction* succ,InstructionType IT):	SUPERCONST(prev,succ,IT){}
		Instruction(Instruction* succ,InstructionType IT):			SUPERCONST(succ,IT){}
		Instruction(InstructionType IT):					SUPERCONST(IT){}
		
		virtual ~Instruction(){
			this->datum=UNUSED;
			return;
		}
	};
	#undef SUPERDEST
	#undef SUPERCONST
	#undef SUPER
}

#endif //EXECBLOCKS_PROTO
