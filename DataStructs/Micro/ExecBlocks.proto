#ifndef EXECBLOCKS_PROTO
#define EXECBLOCKS_PROTO

namespace ExecBlocks{
	using namespace Node;
	
	#define BASE Instruction
	
	#define SUPER DLN<InstructionType>
	#define SUPERC SUPER::DLN
	class BASE:ABSTRACT,public SUPER{
		public:
		virtual void appendSucc(BASE* toappend){
			SUPER::appendSucc(toappend);
			return;
		}
		
		virtual BASE* spliceSucc(){
			return (BASE*)(SUPER::spliceSucc());
		}
		
		BASE(BASE* prev,BASE* succ,InstructionType IT):	SUPERC(prev,succ,IT){}
		BASE(BASE* succ,InstructionType IT):		SUPERC(succ,IT){}
		BASE(InstructionType IT):			SUPERC(IT){}
		
		virtual ~BASE(){}
	};
	#undef SUPERC
	#undef SUPER
	
	#undef BASE
}

#endif //EXECBLOCKS_PROTO
