Notes:------------------------------------------------------------------------------------------------------------------------------

This is a file containing a list of all files and directories present and used within the program.  
Not all files used in the project are show here - some are even automatically generated by 'bisonc++' and 'flexc++'.  

Format:-----------------------------------------------------------------------------------------------------------------------------

Directory					Comment
	Important Files For Building		Another comment
	Paired Source and Header Files	...
	Makefile
	Misc Files
	Subdirectory
		Header Files
		...

Default Files:----------------------------------------------------------------------------------------------------------------------

all.hpp						Includes '../all.hpp'
local.hpp					Folder-collective header file
makefile					For recursive building; includes testing mechanisms
make.i						Includes the 'make.i' directly above it
testmain.cpp					Testing file
up.hpp						Build chain header file link

Listing:----------------------------------------------------------------------------------------------------------------------------

Dimensions					Main Project Directory
	all.hpp					Guard for 'all.root.hpp'
	all.root.hpp				Header file that recursively includes all other headers via 'up.hpp'
	Header Guard Names.txt			Names of all header gaurd macros
	Header Levels.txt			Lists all header file dependencies
	LAYOUT.txt				You're reading it right now
	main.cpp				Main
	makefile				Root makefile
	make.i					Includes 'make.root.i'
	make.root.i				Contains actual included makefile information
	README.txt				Read for information on software versions used
	Specification.png			Specification Image File
	DataStructs				Data structures used in the program
		Storage.hpp			Virtual specification class for data storage
		Macro				Large/composite data structures
			List.hpp		Implementation of a linked list for data storage
			Tube.hpp		Combined implementation of a stack and queue
		Micro				Simple data structures
			Details.hpp		Parameter information for execution blocks
			ExecBlocks.hpp		Runtime typing for instruction blocks
			ExecBlocks.proto	Defines an instruction
			KVP.hpp			Key-Value Pairs
			Node.hpp		Singly and doubly linked nodes classes
	Etc					Code that doesn't go anywhere else
		Globals.hpp			Macro and extern definitions
		Globals.cpp			Literal constants
		InstantiationType.hpp		Defines 'abstract' and 'concrete' classes for complete virtualization
		InstructionType.hpp		Enum of opcodes for each instruction
		Libraries.hpp			Standard libraries file
	Execution				Code related to execution (the actual interpretation)
		RunEnv.hpp			Header file for execution environment
		RunEnv.cpp			Class for an execution object
	Parsing					Chop up the input stream and make an execution chain from it
		ParseEnv.hpp			Class for use during parsing
		ParseEnv.proto			Prototypes for namespace 'Parsing' and class 'ParseEnv'
		bisoncpp			Parser
			grammar			Bisonc++ source grammar file
			testgrammar		Reduced grammar file for testing
			Wrapper.cpp		Wrapper for automatically generated source file
			flexcpp			Scanner
				parsingTest.hpp	List of tokens to be used with the test scanner
				lexer		Flexc++ source regex file
				Wrapper.cpp	Wrapper for automatically generated source file
