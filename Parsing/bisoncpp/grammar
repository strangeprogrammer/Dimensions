//TODO: Finish me (stuff after looping)
//Test string: (abcdefghijklmnopqrstuvwxyz>abcdefghijklmnopqrstuvwxyz<)(&#~@)(0987654321+)(0-)(%)(Â£)($)([)([)([)([)(1-)(])(])(])(])(/)

//For debugging purposes only
%debug
%print-tokens

%default-actions std
%token LPAREN RPAREN MFORE MBACK VSTORE VFORE VBACK VZERO PLUS MINUS INASCII OUTNUM OUTASCII WHILE ENDWHILE NOOP NUMBER LETTER
%start commands

/*
Invoke parser with:
Parser parser;
parser.parse();
*/

%%
commands
: /*empty*/
| commands command
;

command
: LPAREN action RPAREN {
	env.append($2);
}
| WHILE {
	env.append(new tzj());
	env.jpush();
} commands ENDWHILE {
	env.append(new jmp());
	env.jpop();
}
;

action
: motion
| literal_velocity
| store_velocity
| arithmetic
| input
| output
| noop
;

letters
: letters LETTER /*{
	
}*/
| /*empty*/ /*{
	$$=new Axes();
}*/
;

motion
: letters MFORE /*{
	//Do something
}*/ letters MBACK /*{
	//Do something else
}*/
;

literal_velocity
: velocity /*{
	//Do something
}*/
;

store_velocity
: VSTORE velocity /*{
	//Do something
}*/
;

velocity
: letters /*{
	//Do something
}*/ VFORE letters /*{
	//Do something else
}*/ VBACK letters /*{
	//Do something else else
}*/ VZERO
;

arithmetic
: NUMBER PLUS /*{
	add* temp=new add();
	temp->d->value=atoi(yyval);//Fix this so that it doesn't use 'yyval'
	$$=temp;
}*/
| NUMBER MINUS /*{
	sub* temp=new sub();
	temp->d->value=atoi(yyval);//Fix this so that it doesn't use 'yyval'
	$$=temp;
}*/
;

input
: INASCII /*{
	//Do something
}*/
;

output
: output_number /*{
	//Do something
}*/
| output_ascii /*{
	//Do something else
}*/
;

output_number
: OUTNUM /*{
	//Do something
}*/
;

output_ascii
: OUTASCII /*{
	//Do something
}*/
;

noop
: NOOP /*{
	//Do something
}*/
;
