/*Test string:
()	> <&#~@+-(%)(£)($)([)(])(/)0987654321Linux

*/

/*
Invoke scanner with:
Scanner scanner;
scanner.lex()
*/

%interactive

%%
\(		{
			#ifdef SCANNER_DEBUG
			std::cout << "LPAREN ";
			#endif //SCANNER_DEBUG
			return Parser::LPAREN;
		}
\)		{
			#ifdef SCANNER_DEBUG
			std::cout << "RPAREN ";
			#endif //SCANNER_DEBUG
			return Parser::RPAREN;
		}
\>		{
			#ifdef SCANNER_DEBUG
			std::cout << "MFORE ";
			#endif //SCANNER_DEBUG
			return Parser::MFORE;
		}
\<		{
			#ifdef SCANNER_DEBUG
			std::cout << "MBACK ";
			#endif //SCANNER_DEBUG
			return Parser::MBACK;
		}
&		{
			#ifdef SCANNER_DEBUG
			std::cout << "VSTORE ";
			#endif //SCANNER_DEBUG
			return Parser::VSTORE;
		}
#		{
			#ifdef SCANNER_DEBUG
			std::cout << "VFORE ";
			#endif //SCANNER_DEBUG
			return Parser::VFORE;
		}
~		{
			#ifdef SCANNER_DEBUG
			std::cout << "VBACK ";
			#endif //SCANNER_DEBUG
			return Parser::VBACK;
		}
@		{
			#ifdef SCANNER_DEBUG
			std::cout << "VZERO ";
			#endif //SCANNER_DEBUG
			return Parser::VZERO;
		}
\+		{
			#ifdef SCANNER_DEBUG
			std::cout << "PLUS ";
			#endif //SCANNER_DEBUG
			return Parser::PLUS;
		}
-		{
			#ifdef SCANNER_DEBUG
			std::cout << "MINUS ";
			#endif //SCANNER_DEBUG
			return Parser::MINUS;
		}
\(\%\)		{
			#ifdef SCANNER_DEBUG
			std::cout << "INASCII ";
			#endif //SCANNER_DEBUG
			return Parser::INASCII;
		}
\(£\)		{
			#ifdef SCANNER_DEBUG
			std::cout << "OUTNUM ";
			#endif //SCANNER_DEBUG
			return Parser::OUTNUM;
		}
\(\$\)		{
			#ifdef SCANNER_DEBUG
			std::cout << "OUTASCII ";
			#endif //SCANNER_DEBUG
			return Parser::OUTASCII;
		}
\(\[\)		{
			#ifdef SCANNER_DEBUG
			std::cout << "WHILE ";
			#endif //SCANNER_DEBUG
			return Parser::WHILE;
		}
\(\]\)		{
			#ifdef SCANNER_DEBUG
			std::cout << "ENDWHILE ";
			#endif //SCANNER_DEBUG
			return Parser::ENDWHILE;
		}
\(\/\)		{
			#ifdef SCANNER_DEBUG
			std::cout << "NOOP ";
			#endif //SCANNER_DEBUG
			return Parser::NOOP;
		}
[0-9]+		{
			#ifdef SCANNER_DEBUG
			std::cout << "NUMBER ";
			#endif //SCANNER_DEBUG
			return Parser::NUMBER;
		}
[a-zA-Z]	{
			#ifdef SCANNER_DEBUG
			std::cout << "LETTER ";
			#endif //SCANNER_DEBUG
			return Parser::LETTER;
		}
\n		{
			#ifdef SCANNER_DEBUG
			std::cout << "DONE ";
			#endif //SCANNER_DEBUG
			return Parser::DONE;
		}
[ \t]+		/*ignore whitespace*/;
